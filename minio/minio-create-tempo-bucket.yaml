apiVersion: batch/v1
kind: Job
metadata:
  name: minio-create-tempo-bucket
  namespace: minio
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      securityContext:
        runAsNonRoot: true
        seccompProfile: { type: RuntimeDefault }
      containers:
      - name: mc
        image: quay.io/minio/mc:latest
        # image: bitnami/minio-client:latest
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities: { drop: ["ALL"] }
        env:
        - name: ACCESS
          valueFrom: { secretKeyRef: { name: minio-creds, key: access_key_id } }
        - name: SECRET
          valueFrom: { secretKeyRef: { name: minio-creds, key: access_key_secret } }
        command: ["/bin/sh","-c"]
        args:
        - |
          set -eu
          ENDPOINT="http://minio:9000"
          echo "Probing $ENDPOINT ..."
          # wait for MinIO to accept connections (max ~2 min)
          # for i in $(seq 1 60); do
          #   if mc alias set myminio "$ENDPOINT" "$ACCESS" "$SECRET" >/dev/null 2>&1; then
          #     echo "MinIO is ready"; break
          #   fi
          #   echo "[$i/60] waiting for minio..."; sleep 2
          # done
          # show error if alias still isnâ€™t set
          mc --debug alias set myminio "$ENDPOINT" "$ACCESS" "$SECRET"
          mc mb -p myminio/tempo-data || echo "bucket exists"
          mc ls myminio
